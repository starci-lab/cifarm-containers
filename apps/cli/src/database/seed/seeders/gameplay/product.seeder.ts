import { Logger } from "@nestjs/common"
import { createObjectId, DeepPartial } from "@src/common"
import {
    AnimalId,
    CropId,
    FruitId,
    FlowerId,
    InjectMongoose,
    ProductId,
    ProductSchema,
    ProductType,
    BuildingId,
} from "@src/databases"
import { Connection } from "mongoose"
import { Seeder } from "nestjs-seeder"

export class ProductSeeder implements Seeder {
    private readonly logger = new Logger(ProductSeeder.name)

    constructor(
        @InjectMongoose()
        private readonly connection: Connection
    ) {}
        
    public async seed(): Promise<void> {
        this.logger.debug("Seeding products...")
        const data: Array<DeepPartial<ProductSchema>> = [
            {
                _id: createObjectId(ProductId.Honey),
                displayId: ProductId.Honey,
                maxStack: 64,
                isQuality: false,
                goldAmount: 10,
                building: createObjectId(BuildingId.BeeHouse),
                type: ProductType.BeeHouse,
            },
            {
                _id: createObjectId(ProductId.HoneyQuality),
                displayId: ProductId.HoneyQuality,
                maxStack: 64,
                isQuality: true,
                qualityVersionOf: createObjectId(ProductId.Honey),
                goldAmount: 20,
                building: createObjectId(BuildingId.BeeHouse),
                type: ProductType.BeeHouse,
            },
            {
                _id: createObjectId(ProductId.Egg),
                displayId: ProductId.Egg,
                maxStack: 64,
                isQuality: false,
                goldAmount: 8,
                type: ProductType.Animal,
                animal: createObjectId(AnimalId.Chicken),
            },
            {
                _id: createObjectId(ProductId.EggQuality),
                displayId: ProductId.EggQuality,
                maxStack: 64,
                isQuality: true,
                qualityVersionOf: createObjectId(ProductId.Egg),
                goldAmount: 16,
                type: ProductType.Animal,
                animal: createObjectId(AnimalId.Chicken),
            },
            {
                _id: createObjectId(ProductId.Milk),
                displayId: ProductId.Milk,
                maxStack: 64,
                isQuality: false,
                goldAmount: 12,
                type: ProductType.Animal,
                animal: createObjectId(AnimalId.Cow),
            },
            {
                _id: createObjectId(ProductId.MilkQuality),
                displayId: ProductId.MilkQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 24,
                qualityVersionOf: createObjectId(ProductId.Milk),
                type: ProductType.Animal,
                animal: createObjectId(AnimalId.Cow),
            },
            {
                _id: createObjectId(ProductId.Turnip),
                displayId: ProductId.Turnip,
                maxStack: 64,
                isQuality: false,
                goldAmount: 4,
                type: ProductType.Crop,
                crop: createObjectId(CropId.Turnip),
            },
            {
                _id: createObjectId(ProductId.TurnipQuality),
                displayId: ProductId.TurnipQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 8,
                qualityVersionOf: createObjectId(ProductId.Turnip),
                type: ProductType.Crop,
                crop: createObjectId(CropId.Turnip),
            },
            {
                _id: createObjectId(ProductId.Carrot),
                displayId: ProductId.Carrot,
                maxStack: 64,
                isQuality: false,
                goldAmount: 7,
                type: ProductType.Crop,
                crop: createObjectId(CropId.Carrot),
            },
            {
                _id: createObjectId(ProductId.Potato),
                displayId: ProductId.Potato,
                maxStack: 64,
                isQuality: false,
                goldAmount: 10,
                type: ProductType.Crop,
                crop: createObjectId(CropId.Potato),
            },
            {
                _id: createObjectId(ProductId.Cucumber),
                displayId: ProductId.Cucumber,
                maxStack: 64,
                isQuality: false,
                goldAmount: 17,
                type: ProductType.Crop,
                crop: createObjectId(CropId.Cucumber),
            },
            {
                _id: createObjectId(ProductId.Pineapple),
                displayId: ProductId.Pineapple,
                maxStack: 64,
                isQuality: false,
                goldAmount: 8,
                type: ProductType.Crop,
                crop: createObjectId(CropId.Pineapple),
            },
            {
                _id: createObjectId(ProductId.CarrotQuality),
                displayId: ProductId.CarrotQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 14,
                qualityVersionOf: createObjectId(ProductId.Carrot),
                type: ProductType.Crop,
                crop: createObjectId(CropId.Carrot),
            },
            {
                _id: createObjectId(ProductId.PotatoQuality),
                displayId: ProductId.PotatoQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 20,
                qualityVersionOf: createObjectId(ProductId.Potato),
                type: ProductType.Crop,
                crop: createObjectId(CropId.Potato),
            },
            {
                _id: createObjectId(ProductId.CucumberQuality),
                displayId: ProductId.CucumberQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 34,
                qualityVersionOf: createObjectId(ProductId.Cucumber),
                type: ProductType.Crop,
                crop: createObjectId(CropId.Cucumber),
            },
            {
                _id: createObjectId(ProductId.PineappleQuality),
                displayId: ProductId.PineappleQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 16,
                qualityVersionOf: createObjectId(ProductId.Pineapple),
                type: ProductType.Crop,
                crop: createObjectId(CropId.Pineapple),
            },
            {
                _id: createObjectId(ProductId.Watermelon),
                displayId: ProductId.Watermelon,
                maxStack: 64,
                isQuality: false,
                goldAmount: 14,
                type: ProductType.Crop,
                crop: createObjectId(CropId.Watermelon),
            },
            {
                _id: createObjectId(ProductId.BellPepper),
                displayId: ProductId.BellPepper,
                maxStack: 64,
                isQuality: false,
                goldAmount: 14,
                type: ProductType.Crop,
                crop: createObjectId(CropId.BellPepper),
            },
            {
                _id: createObjectId(ProductId.BellPepperQuality),
                displayId: ProductId.BellPepperQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 28,
                qualityVersionOf: createObjectId(ProductId.BellPepper),
                type: ProductType.Crop,
                crop: createObjectId(CropId.BellPepper),
            },
            {
                _id: createObjectId(ProductId.WatermelonQuality),
                displayId: ProductId.WatermelonQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 28,
                qualityVersionOf: createObjectId(ProductId.Watermelon),
                type: ProductType.Crop,
                crop: createObjectId(CropId.Watermelon),
            },
            {
                _id: createObjectId(ProductId.Strawberry),
                displayId: ProductId.Strawberry,
                maxStack: 64,
                isQuality: false,
                goldAmount: 17,
                type: ProductType.Crop,
                crop: createObjectId(CropId.Strawberry),
            },
            {
                _id: createObjectId(ProductId.StrawberryQuality),
                displayId: ProductId.StrawberryQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 34,
                qualityVersionOf: createObjectId(ProductId.Strawberry),
                type: ProductType.Crop,
                crop: createObjectId(CropId.Strawberry),
            },         
            {
                _id: createObjectId(ProductId.Pumpkin),
                displayId: ProductId.Pumpkin,
                maxStack: 64,
                isQuality: false,
                goldAmount: 29,
                type: ProductType.Crop,
                crop: createObjectId(CropId.Pumpkin),
            },
            {
                _id: createObjectId(ProductId.PumpkinQuality),  
                displayId: ProductId.PumpkinQuality,    
                maxStack: 64,
                isQuality: true,
                goldAmount: 58,
                qualityVersionOf: createObjectId(ProductId.Pumpkin),
                type: ProductType.Crop,
                crop: createObjectId(CropId.Pumpkin),
            },
            {
                _id: createObjectId(ProductId.Cauliflower),
                displayId: ProductId.Cauliflower,
                maxStack: 64,
                isQuality: false,
                goldAmount: 34,
                type: ProductType.Crop,
                crop: createObjectId(CropId.Cauliflower),
            },
            {
                _id: createObjectId(ProductId.CauliflowerQuality),
                displayId: ProductId.CauliflowerQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 68,
                qualityVersionOf: createObjectId(ProductId.Cauliflower),
                type: ProductType.Crop,
                crop: createObjectId(CropId.Cauliflower),
            },
            {
                _id: createObjectId(ProductId.Tomato),
                displayId: ProductId.Tomato,
                maxStack: 64,
                isQuality: false,
                goldAmount: 24,
                type: ProductType.Crop,
                crop: createObjectId(CropId.Tomato),
            },
            {
                _id: createObjectId(ProductId.TomatoQuality),
                displayId: ProductId.TomatoQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 48,
                qualityVersionOf: createObjectId(ProductId.Tomato),
                type: ProductType.Crop,
                crop: createObjectId(CropId.Tomato),
            },
            {
                _id: createObjectId(ProductId.Eggplant),    
                displayId: ProductId.Eggplant,
                maxStack: 64,
                isQuality: false,
                goldAmount: 24,
                qualityVersionOf: createObjectId(ProductId.Eggplant),
                type: ProductType.Crop,
                crop: createObjectId(CropId.Eggplant),
            },
            {
                _id: createObjectId(ProductId.EggplantQuality),
                displayId: ProductId.EggplantQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 48,
                qualityVersionOf: createObjectId(ProductId.Eggplant),
                type: ProductType.Crop,
                crop: createObjectId(CropId.Eggplant),
            },
            {
                _id: createObjectId(ProductId.Pea),
                displayId: ProductId.Pea,
                maxStack: 64,
                isQuality: false,
                goldAmount: 29,
                type: ProductType.Crop,
                crop: createObjectId(CropId.Pea),
            },
            {
                _id: createObjectId(ProductId.PeaQuality),  
                displayId: ProductId.PeaQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 58,
                qualityVersionOf: createObjectId(ProductId.Pea),
                type: ProductType.Crop,
                crop: createObjectId(CropId.Pea),
            },
            {
                _id: createObjectId(ProductId.Sunflower),
                displayId: ProductId.Sunflower,
                maxStack: 64,
                isQuality: false,
                goldAmount: 6,
                qualityVersionOf: createObjectId(ProductId.Sunflower),
                type: ProductType.Flower,
                flower: createObjectId(FlowerId.Sunflower),
            },
            {
                _id: createObjectId(ProductId.SunflowerQuality),
                displayId: ProductId.SunflowerQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 12,
                qualityVersionOf: createObjectId(ProductId.Sunflower),
                type: ProductType.Flower,
                flower: createObjectId(FlowerId.Sunflower),
            },
            {
                _id: createObjectId(ProductId.Daisy),
                displayId: ProductId.Daisy,
                maxStack: 64,
                isQuality: false,
                goldAmount: 3,
                type: ProductType.Flower,
                flower: createObjectId(FlowerId.Daisy),
            },
            {
                _id: createObjectId(ProductId.DaisyQuality),
                displayId: ProductId.DaisyQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 6,
                qualityVersionOf: createObjectId(ProductId.Daisy),
                type: ProductType.Flower,
                flower: createObjectId(FlowerId.Daisy),
            },
            {
                _id: createObjectId(ProductId.Banana),
                displayId: ProductId.Banana,
                maxStack: 64,
                isQuality: false,
                goldAmount: 8,
                type: ProductType.Fruit,
                fruit: createObjectId(FruitId.Banana),
            },
            {
                _id: createObjectId(ProductId.BananaQuality),
                displayId: ProductId.BananaQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 16,
                qualityVersionOf: createObjectId(ProductId.Banana),
                type: ProductType.Fruit,
                fruit: createObjectId(FruitId.Banana),
            },
            {
                _id: createObjectId(ProductId.Apple),
                displayId: ProductId.Apple,
                maxStack: 64,
                isQuality: false,
                goldAmount: 8,
                type: ProductType.Fruit,
                fruit: createObjectId(FruitId.Apple),
            },
            {
                _id: createObjectId(ProductId.AppleQuality),
                displayId: ProductId.AppleQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 16,
                qualityVersionOf: createObjectId(ProductId.Apple),
                type: ProductType.Fruit,
                fruit: createObjectId(FruitId.Apple),
            },
            {
                _id: createObjectId(ProductId.DragonFruit),
                displayId: ProductId.DragonFruit,
                maxStack: 64,
                isQuality: false,
                goldAmount: 12,
                type: ProductType.Fruit,
                fruit: createObjectId(FruitId.DragonFruit),
            },
            {
                _id: createObjectId(ProductId.DragonFruitQuality),
                displayId: ProductId.DragonFruitQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 24,
                qualityVersionOf: createObjectId(ProductId.DragonFruit),
                type: ProductType.Fruit,
                fruit: createObjectId(FruitId.DragonFruit),
            },
            {
                _id: createObjectId(ProductId.Jackfruit),
                displayId: ProductId.Jackfruit,
                maxStack: 64,
                isQuality: false,   
                goldAmount: 12,
                type: ProductType.Fruit,
                fruit: createObjectId(FruitId.Jackfruit),
            },
            {
                _id: createObjectId(ProductId.JackfruitQuality),    
                displayId: ProductId.JackfruitQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 24,
                qualityVersionOf: createObjectId(ProductId.Jackfruit),
                type: ProductType.Fruit,
                fruit: createObjectId(FruitId.Jackfruit),
            },
            {
                _id: createObjectId(ProductId.Rambutan),
                displayId: ProductId.Rambutan,
                maxStack: 64,
                isQuality: false,
                goldAmount: 12,
                type: ProductType.Fruit,
                fruit: createObjectId(FruitId.Rambutan),
            },
            {
                _id: createObjectId(ProductId.RambutanQuality),
                displayId: ProductId.RambutanQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 24,
                qualityVersionOf: createObjectId(ProductId.Rambutan),
                type: ProductType.Fruit,
                fruit: createObjectId(FruitId.Rambutan),
            },
            {
                _id: createObjectId(ProductId.Pomegranate),
                displayId: ProductId.Pomegranate,
                maxStack: 64,
                isQuality: false,
                goldAmount: 12,
                type: ProductType.Fruit,
                fruit: createObjectId(FruitId.Pomegranate),
            },
            {
                _id: createObjectId(ProductId.PomegranateQuality),
                displayId: ProductId.PomegranateQuality,
                maxStack: 64,
                isQuality: true,
                goldAmount: 24,
                qualityVersionOf: createObjectId(ProductId.Pomegranate),
                type: ProductType.Fruit,
                fruit: createObjectId(FruitId.Pomegranate),
            },
        ]
        
        await this.connection.model<ProductSchema>(ProductSchema.name).insertMany(data)
    }
    
    async drop(): Promise<void> {
        this.logger.verbose("Dropping products...")
        await this.connection.model<ProductSchema>(ProductSchema.name).deleteMany({})
    }
}