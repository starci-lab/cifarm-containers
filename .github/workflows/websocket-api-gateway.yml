name: CI/CD Pipeline for Websocket API Gateway

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'  # Trigger the workflow when files under the 'src' folder change
      - 'apps/websocket-api-gateway/**'  # Trigger the workflow when files under the 'apps/websocket-api-gateway' folder change
jobs:
  deployment:
    concurrency:
      group: "websocket-api-gateway-deployment"
      cancel-in-progress: true
    runs-on: self-hosted
    environment: cifarm
    steps:
    - name: Checkout code
      uses: actions/checkout@v2 
    
    - name: Create manifest.yaml file
      run: |
        if ! helm repo list | grep -q "cifarm"; then
          helm repo add cifarm https://starci-lab.github.io/cifarm-k8s/helm
        else
          helm repo update cifarm
        fi
        helm template websocket-api-gateway cifarm/websocket-api-gateway > \
          ./manifest.yaml

    - name: Create namespace
      run: kubectl create namespace websocket-api-gateway \
           2>/dev/null || echo "Namespace 'websocket-api-gateway' already exist"

    - name: Apply Kaniko Build
      run: |
        kubectl delete pod websocket-api-gateway-kaniko-build \
        --namespace build \
        2>/dev/null || echo "Pod 'websocket-api-gateway-kaniko-build' does not exist"
        kubectl apply -f ./manifest.yaml -l mode=build
  
    - name: Wait for Kaniko Build to Complete
      run: |
        kubectl wait pod/websocket-api-gateway-kaniko-build \
        --for jsonpath="status.containerStatuses[0].state.terminated.reason"=Completed \
        --namespace build \
        --timeout=20m
      continue-on-error: false
    - name: Create secret
      run: |
        kubectl delete secret generic websocket-api-gateway-env \
        --namespace websocket-api-gateway \
        --ignore-not-found
        kubectl create secret generic websocket-api-gateway-env --namespace websocket-api-gateway \
        --from-literal=WEBSOCKET_API_GATEWAY_PORT=${{ vars.WEBSOCKET_API_GATEWAY_PORT }} \
        --from-literal=BROADCAST_SERVICE_HOST=${{ vars.BROADCAST_SERVICE_PORT }} \
        --from-literal=BROADCAST_SERVICE_PORT=${{ vars.BROADCAST_SERVICE_HOST }}
    - name: Apply the Deployment
      run: kubectl apply -f ./manifest.yaml -l mode=deploy