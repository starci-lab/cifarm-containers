type InventoryEntity {
  quantity: String!
  tokenId: String
  premium: Boolean!
  isPlaced: Boolean!
  userId: String
  user: UserEntity
  inventoryTypeId: String
  inventoryType: InventoryTypeEntity!
}

type UpgradeEntity {
  id: ID!
  upgradePrice: Int!
  capacity: Int!
  upgradeLevel: Float!
  building: BuildingEntity!
}

type TileEntity {
  id: ID!
  price: Float!
  maxOwnership: Int!
  isNFT: Boolean!
  availableInShop: Boolean!
  inventoryType: InventoryTypeEntity
  placedItemType: PlacedItemTypeEntity
}

type PlacedItemTypeEntity {
  id: ID!
  type: String!
  tileId: String
  animalId: String
  placedItems: [PlacedItemEntity!]
}

type BuildingEntity {
  id: ID!
  availableInShop: Boolean!
  type: String
  maxUpgrade: Int!
  price: Int
  upgrades: [UpgradeEntity!]
  placedItemType: PlacedItemTypeEntity
}

type BuildingInfoEntity {
  currentUpgrade: Float!
  occupancy: Float!
  buildingId: String
  building: BuildingEntity!
  placedItem: PlacedItemEntity!
}

type SeedGrowthInfoEntity {
  currentStage: Int!
  currentStageTimeElapsed: Int!
  totalTimeElapsed: Int!
  currentPerennialCount: Int!
  harvestQuantityRemaining: Int!
  cropId: String!
  crop: CropEntity!
  currentState: String!
  fullyMatured: Boolean!
  isFertilized: Boolean!
  placedItemId: String!
  placedItem: PlacedItemEntity!
}

type PlacedItemEntity {
  x: String!
  y: String!
  userId: String
  user: UserEntity
  inventoryId: String
  seedGrowthInfo: SeedGrowthInfoEntity
  animalInfo: AnimalInfoEntity
  buildingInfo: BuildingInfoEntity
  placedItems: [PlacedItemEntity!]!
  parentId: String
  parent: String
  placedItemTypeId: String
  placedItemType: PlacedItemTypeEntity
}

type UserEntity {
  username: String!
  chainKey: String!
  network: String!
  accountAddress: String!
  golds: Int!
  tokens: Float!
  experiences: Int!
  energy: Int!
  level: Int!
  tutorialIndex: Int!
  stepIndex: Int!
  dailyRewardStreak: Int!
  dailyRewardLastClaimTime: DateTime!
  dailyRewardNumberOfClaim: Int!
  spinLastTime: DateTime!
  spinCount: Int!
  inventories: [InventoryEntity!]!
  placedItems: [PlacedItemEntity!]!
  deliveringProducts: [DeliveringProductEntity!]!
  followingRecords: [UserEntity!]!
  followedRecords: [UserEntity!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type DeliveringProductEntity {
  quantity: Int!
  index: Int!
  premium: Boolean!
  userId: String
  user: UserEntity
  productId: String
  product: ProductEntity
}

type ProductEntity {
  id: ID!
  isPremium: Boolean!
  goldAmount: Int!
  tokenAmount: Float!
  type: String!
  cropId: String
  animalId: String
  inventoryType: InventoryTypeEntity
  deliveringProducts: [DeliveringProductEntity!]!
}

type SupplyEntity {
  id: ID!
  type: String!
  price: Float!
  availableInShop: Boolean!
  maxStack: Int!
  fertilizerEffectTimeReduce: Int
  inventoryType: InventoryTypeEntity
  spinPrizes: [SpinPrizeEntity!]
}

type SpinSlotEntity {
  spinPrizeId: String!
  spinPrize: SpinPrizeEntity
}

type SpinPrizeEntity {
  type: String!
  cropId: String
  crop: CropEntity
  supplyId: String
  golds: Int
  tokens: Float
  quantity: Int
  appearanceChance: String
  spinSlots: [SpinSlotEntity!]
}

type CropEntity {
  id: ID!
  growthStageDuration: Int!
  growthStages: Int!
  price: Int!
  premium: Boolean!
  perennialCount: Int!
  nextGrowthStageAfterHarvest: Int!
  minHarvestQuantity: Int!
  maxHarvestQuantity: Int!
  basicHarvestExperiences: Int!
  premiumHarvestExperiences: Int!
  availableInShop: Boolean!
  maxStack: Int!
  product: ProductEntity
  inventoryType: InventoryTypeEntity
  spinPrizes: [SpinPrizeEntity!]
}

type InventoryTypeEntity {
  id: ID!
  type: String!
  placeable: Boolean!
  deliverable: Boolean!
  asTool: Boolean!
  maxStack: Float!
  cropId: String
  animalId: String
  supplyId: String
  productId: String
  tileId: String
  inventories: [InventoryEntity!]
}

type AnimalEntity {
  id: ID!
  yieldTime: Int!
  offspringPrice: Int!
  isNFT: Boolean!
  price: Int!
  growthTime: Int!
  availableInShop: Boolean!
  hungerTime: Int!
  minHarvestQuantity: Int!
  maxHarvestQuantity: Int!
  basicHarvestExperiences: Int!
  premiumHarvestExperiences: Int!
  type: String!
  sickChance: Float!
  product: ProductEntity
  inventoryType: InventoryTypeEntity
  placedItemType: PlacedItemTypeEntity
}

type AnimalInfoEntity {
  currentGrowthTime: Float!
  currentHungryTime: Float!
  currentYieldTime: Float!
  hasYielded: Boolean!
  isAdult: Boolean!
  animalId: String!
  animal: AnimalEntity!
  currentState: String!
  harvestQuantityRemaining: Int!
  alreadySick: Boolean!
  placedItem: PlacedItemEntity!
}

type DailyRewardEntity {
  id: ID!
  golds: Int
  tokens: Float
  day: Int!
  lastDay: Boolean!
}

type SystemEntity {
  id: ID!
  value: JSON!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type ToolEntity {
  id: ID!
  availableIn: String!
  index: Int!
}

type Query {
  animals(id: String!): AnimalEntity
  animal_infos(id: String!): AnimalInfoEntity
  buildings(args: GetBuildingsArgs!): [BuildingEntity!]!
  building(id: String!): BuildingEntity!
  building_infos(args: GetBuildingInfosArgs!): [BuildingInfoEntity!]!
  building_info(id: String!): BuildingInfoEntity
  crops(args: GetCropsArgs!): [CropEntity!]!
  crop(id: String!): CropEntity
  daily_rewards(args: GetDailyRewardsArgs!): [DailyRewardEntity!]!
  daily_reward(id: String!): DailyRewardEntity
  inventories(args: GetInventoriesArgs!): [InventoryEntity!]!
  inventory(id: String!): InventoryEntity
  inventory_types(args: GetInventoryTypesArgs!): [InventoryTypeEntity!]!
  inventory_type(id: String!): InventoryTypeEntity
  placed_item_types(args: GetPlacedItemTypesArgs!): [PlacedItemTypeEntity!]!
  placed_item_type(id: String!): PlacedItemTypeEntity
  placeditems(args: GetPlacedItemsArgs!): [PlacedItemEntity!]!
  placeditem(id: String!): PlacedItemEntity
  products(args: GetProductsArgs!): [ProductEntity!]!
  product(id: String!): ProductEntity
  seed_growth_infos(id: String!): SeedGrowthInfoEntity
  spin_slots(args: GetSpinsArgs!): [SpinSlotEntity!]!
  spin_slot(id: String!): SpinSlotEntity
  supplies(args: GetSuppliesArgs!): [SupplyEntity!]!
  supply(id: String!): SupplyEntity
  systems(args: GetSystemsArgs!): [SystemEntity!]!
  system(id: String!): SystemEntity
  tiles(args: GetTilesArgs!): [TileEntity!]!
  tile(id: String!): TileEntity
  tools(args: GetToolsArgs!): [ToolEntity!]!
  tool(id: String!): ToolEntity
  upgrades(args: GetUpgradesArgs!): [UpgradeEntity!]!
  upgrade(id: String!): UpgradeEntity
  users(args: GetUsersArgs!): [UserEntity!]!
  user(id: String!): UserEntity
}

input GetBuildingsArgs {
  limit: Int
  offset: Int
}

input GetBuildingInfosArgs {
  limit: Int = 10
  offset: Int = 0
}

input GetCropsArgs {
  limit: Int
  offset: Int
}

input GetDailyRewardsArgs {
  limit: Int
  offset: Int
}

"""GetInventoriesArgs"""
input GetInventoriesArgs {
  limit: Int = 10
  offset: Int = 0
}

"""GetInventoryTypesArgs"""
input GetInventoryTypesArgs {
  limit: Int = 10
  offset: Int = 0
}

input GetPlacedItemTypesArgs {
  limit: Int = 10
  offset: Int = 0
}

input GetPlacedItemsArgs {
  limit: Int = 10
  offset: Int = 0
}

"""GetProductArgs"""
input GetProductsArgs {
  limit: Int = 10
  offset: Int = 0
}

input GetSpinsArgs {
  limit: Int = 10
  offset: Int = 0
}

input GetSuppliesArgs {
  limit: Int = 10
  offset: Int = 0
}

input GetSystemsArgs {
  limit: Int = 10
  offset: Int = 0
}

input GetTilesArgs {
  limit: Int = 10
  offset: Int = 0
}

input GetToolsArgs {
  limit: Int = 10
  offset: Int = 0
}

"""GetUpgradesArgs"""
input GetUpgradesArgs {
  limit: Int = 10
  offset: Int = 0
}

"""GetUsersArgs"""
input GetUsersArgs {
  limit: Int = 10
  offset: Int = 0
}